/*
	SDZGeoCode_Service.m
	The implementation classes and methods for the GeoCode_Service web service.
	Generated by SudzC.com
*/

#import "SDZGeoCode_Service.h"
				
#import "Soap.h";
	
#import "SDZArrayOfGeocoderResult.h";
#import "SDZArrayOfGeocoderAddressResult.h";
#import "SDZArrayOfGeocoderIntersectionResult.h";
#import "SDZGeocoderAddressResult.h";
#import "SDZGeocoderIntersectionResult.h";
#import "SDZGeocoderResult.h";

/* Implementation of the service */
				
@implementation SDZGeoCode_Service

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"http://rpc.geocoder.us/service/soap/";
			self.namespace = @"http://rpc.geocoder.us/Geo/Coder/US/";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (SDZGeoCode_Service*) service {
		return [SDZGeoCode_Service serviceWithUsername:nil andPassword:nil];
	}
	
	+ (SDZGeoCode_Service*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[[SDZGeoCode_Service alloc] initWithUsername:username andPassword:password] autorelease];
	}

		
	/* Returns SDZArrayOfGeocoderResult*.  */
	- (SoapRequest*) geocode: (id <SoapDelegate>) handler location: (NSString*) location
	{
		return [self geocode: handler action: nil location: location];
	}

	- (SoapRequest*) geocode: (id) _target action: (SEL) _action location: (NSString*) location
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: location forName: @"location"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"geocode" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://rpc.geocoder.us/Geo/Coder/US#geocode" postData: _envelope deserializeTo: [[SDZArrayOfGeocoderResult alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns SDZArrayOfGeocoderAddressResult*.  */
	- (SoapRequest*) geocode_address: (id <SoapDelegate>) handler address: (NSString*) address
	{
		return [self geocode_address: handler action: nil address: address];
	}

	- (SoapRequest*) geocode_address: (id) _target action: (SEL) _action address: (NSString*) address
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: address forName: @"address"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"geocode_address" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://rpc.geocoder.us/Geo/Coder/US#geocode_address" postData: _envelope deserializeTo: [[SDZArrayOfGeocoderAddressResult alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns SDZArrayOfGeocoderIntersectionResult*.  */
	- (SoapRequest*) geocode_intersection: (id <SoapDelegate>) handler intersection: (NSString*) intersection
	{
		return [self geocode_intersection: handler action: nil intersection: intersection];
	}

	- (SoapRequest*) geocode_intersection: (id) _target action: (SEL) _action intersection: (NSString*) intersection
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: intersection forName: @"intersection"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"geocode_intersection" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://rpc.geocoder.us/Geo/Coder/US#geocode_intersection" postData: _envelope deserializeTo: [[SDZArrayOfGeocoderIntersectionResult alloc] autorelease]];
		[_request send];
		return _request;
	}


@end
	